快速排序（Quick Sort）：通过交换数据元素的位置进行排序。
基本思想：通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。
快速排序采用了分治法来解决问题。

运行过程：
1.从序列中挑出一个元素，称为“基准”（pivot）。一般是选取序列的第一个元素。
2.重新排序数列，所有比基准值小的元素摆放在基准前面，所有比基准值大的元素摆在基准的后面（相同的数可以到任一边）。在这个分区结束之后，该基准就处于数列的中间位置。这个称为分区（partition）操作。
3.递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。
4.直到序列的大小是0或1，也就是所有元素都已经被排序好了，递归结束。

优点：对于大量数据的时候，很容易将某个元素放到对应的位置。
缺点：
1.如果原始数据就是有序的，那么快速排序过程中对序列的划分就十分不均匀，将序列分为了1和n-1的大小（而通常希望的最理想状态是二分）；
2.对于小型数组进行排序时，也需要递归进行几次才能将数据放到正确的位置；
3.排序快速是不稳定的，当重复数据很多时效率比较低。

优化：
1.优化选取基准pivotkey - 三数取中法
选取序列左端、中间和右端三个数据元素，按大小进行排序，选择中间大小的元素作为基准。
2.序列较小时使用插入排序代替快速排序
在递归过程，当排序的子序列小于预定的值M时，采用插入排序。
3.重复元素较多使用三分区法
通过划分让相等的元素连续地摆放，然后只对左侧小于V的序列和右侧大于V对的序列进行排序。

快速排序是通常被认为在同数量级（O(nlog2n)）的排序方法中平均性能最好的。
快速排序的平均时间复杂度为O(nlogn)，空间复杂度为O(logn)。
快速排序是一种不稳定的排序算法。

参考链接：https://blog.csdn.net/guoweimelon/article/details/50903712
